<?phprequire_once __DIR__ . '/config.php';try {    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {        ApiResponse::error('Método não permitido', 405);    }    $contentType = $_SERVER['CONTENT_TYPE'] ?? '';    $input = [];    if (stripos($contentType, 'application/json') !== false) {        $raw = file_get_contents('php://input');        $input = json_decode($raw, true) ?: [];    } else {        $input = $_POST;    }    $required = ['name', 'email', 'username'];    $missing = Validator::validateRequired($required, $input);    if (!empty($missing)) {        ApiResponse::error('Campos obrigatórios ausentes: ' . implode(', ', $missing), 422);    }    $name = Validator::sanitizeInput($input['name']);    $email = strtolower(trim($input['email']));    $username = strtolower(preg_replace('/\s+/', '', trim($input['username'])));    // Removido: senha não é mais enviada; será gerada automaticamente    if (!Validator::validateEmail($email)) {        ApiResponse::error('Email inválido', 422);    }    // Gerar senha aleatória segura    $password = generateSecureToken(8);    $db = new Database();    $conn = $db->getConnection();    // Verificar duplicatas    $stmt = $conn->prepare('SELECT COUNT(*) AS c FROM users WHERE email = ? OR username = ?');    $stmt->execute([$email, $username]);    $exists = (int)$stmt->fetch()['c'] > 0;    if ($exists) {        ApiResponse::error('Email ou usuário já cadastrado', 409);    }    // Criar usuário como técnico (support)    $passwordHash = hashPassword($password);    $stmt = $conn->prepare('INSERT INTO users (name, email, username, password_hash, user_type, active) VALUES (?, ?, ?, ?, ?, ?)');    $stmt->execute([$name, $email, $username, $passwordHash, 'support', 1]);    $newId = (int)$conn->lastInsertId();    // Inserir perfil completo se demais campos vierem no payload    $profileSql = 'INSERT INTO technician_profiles (        user_id, naturalidade, rg, cpf, data_nascimento, genero, nome_mae, nome_pai,        cep, endereco, numero, bairro, cidade, estado, pais,        celular1, celular2, whats, telefone_fixo,        chave_pix, banco, cod_banco, agencia, conta, tipo_conta, operacao, favorecido,        emp_razao_social, emp_nome_fantasia, emp_cnpj, emp_inscricao_estadual, emp_inscricao_municipal,        emp_cep, emp_endereco, emp_numero, emp_bairro, emp_cidade, emp_estado, emp_pais,        emp_chave_pix, emp_banco, emp_cod_banco, emp_agencia, emp_conta, emp_tipo_conta, emp_operacao, emp_favorecido    ) VALUES (        :user_id, :naturalidade, :rg, :cpf, :data_nascimento, :genero, :nome_mae, :nome_pai,        :cep, :endereco, :numero, :bairro, :cidade, :estado, :pais,        :celular1, :celular2, :whats, :telefone_fixo,        :chave_pix, :banco, :cod_banco, :agencia, :conta, :tipo_conta, :operacao, :favorecido,        :emp_razao_social, :emp_nome_fantasia, :emp_cnpj, :emp_inscricao_estadual, :emp_inscricao_municipal,        :emp_cep, :emp_endereco, :emp_numero, :emp_bairro, :emp_cidade, :emp_estado, :emp_pais,        :emp_chave_pix, :emp_banco, :emp_cod_banco, :emp_agencia, :emp_conta, :emp_tipo_conta, :emp_operacao, :emp_favorecido    )';    $stmt = $conn->prepare($profileSql);    $stmt->execute([        ':user_id' => $newId,        ':naturalidade' => $input['naturalidade'] ?? null,        ':rg' => $input['rg'] ?? null,        ':cpf' => isset($input['cpf']) ? preg_replace('/\D/', '', $input['cpf']) : null,        ':data_nascimento' => $input['data_nascimento'] ?? null,        ':genero' => $input['genero'] ?? null,        ':nome_mae' => $input['nome_mae'] ?? null,        ':nome_pai' => $input['nome_pai'] ?? null,        ':cep' => $input['cep'] ?? null,        ':endereco' => $input['endereco'] ?? null,        ':numero' => $input['numero'] ?? null,        ':bairro' => $input['bairro'] ?? null,        ':cidade' => $input['cidade'] ?? null,        ':estado' => $input['estado'] ?? null,        ':pais' => $input['pais'] ?? null,        ':celular1' => $input['celular1'] ?? null,        ':celular2' => $input['celular2'] ?? null,        ':whats' => $input['whats'] ?? null,        ':telefone_fixo' => $input['telefone_fixo'] ?? null,        ':chave_pix' => $input['chave_pix'] ?? null,        ':banco' => $input['banco'] ?? null,        ':cod_banco' => $input['cod_banco'] ?? null,        ':agencia' => $input['agencia'] ?? null,        ':conta' => $input['conta'] ?? null,        ':tipo_conta' => $input['tipo_conta'] ?? null,        ':operacao' => $input['operacao'] ?? null,        ':favorecido' => $input['favorecido'] ?? null,        ':emp_razao_social' => $input['emp_razao_social'] ?? null,        ':emp_nome_fantasia' => $input['emp_nome_fantasia'] ?? null,        ':emp_cnpj' => isset($input['emp_cnpj']) ? preg_replace('/\D/', '', $input['emp_cnpj']) : null,        ':emp_inscricao_estadual' => $input['emp_inscricao_estadual'] ?? null,        ':emp_inscricao_municipal' => $input['emp_inscricao_municipal'] ?? null,        ':emp_cep' => $input['emp_cep'] ?? null,        ':emp_endereco' => $input['emp_endereco'] ?? null,        ':emp_numero' => $input['emp_numero'] ?? null,        ':emp_bairro' => $input['emp_bairro'] ?? null,        ':emp_cidade' => $input['emp_cidade'] ?? null,        ':emp_estado' => $input['emp_estado'] ?? null,        ':emp_pais' => $input['emp_pais'] ?? null,        ':emp_chave_pix' => $input['emp_chave_pix'] ?? null,        ':emp_banco' => $input['emp_banco'] ?? null,        ':emp_cod_banco' => $input['emp_cod_banco'] ?? null,        ':emp_agencia' => $input['emp_agencia'] ?? null,        ':emp_conta' => $input['emp_conta'] ?? null,        ':emp_tipo_conta' => $input['emp_tipo_conta'] ?? null,        ':emp_operacao' => $input['emp_operacao'] ?? null,        ':emp_favorecido' => $input['emp_favorecido'] ?? null,    ]);    logActivity($newId, 'technician_register', 'users');    ApiResponse::success([        'id' => $newId,        'name' => $name,        'email' => $email,        'username' => $username,        'user_type' => 'support'    ], 'Técnico cadastrado com sucesso', 201);} catch (Exception $e) {    ApiResponse::error('Erro ao cadastrar técnico', 500, $e->getMessage());}?>