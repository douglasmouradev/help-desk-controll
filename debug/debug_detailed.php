<?php// Debug detalhado do sistemaecho "<h1>üîç Debug Detalhado - Sistema Help Desk</h1>";// 1. Verificar se o XAMPP est√° funcionandoecho "<h2>1. Status do XAMPP:</h2>";if (function_exists('phpinfo')) {    echo "<p style='color: green;'>‚úÖ PHP funcionando - Vers√£o: " . phpversion() . "</p>";} else {    echo "<p style='color: red;'>‚ùå PHP n√£o est√° funcionando</p>";}// 2. Verificar se o MySQL est√° funcionandoecho "<h2>2. Status do MySQL:</h2>";try {    $pdo = new PDO('mysql:host=localhost', 'root', '');    echo "<p style='color: green;'>‚úÖ MySQL funcionando</p>";} catch (PDOException $e) {    echo "<p style='color: red;'>‚ùå MySQL n√£o est√° funcionando: " . $e->getMessage() . "</p>";}// 3. Verificar se o banco existeecho "<h2>3. Status do Banco de Dados:</h2>";try {    $pdo = new PDO('mysql:host=localhost;dbname=helpdesk_titanium', 'root', '');    echo "<p style='color: green;'>‚úÖ Banco 'helpdesk_titanium' existe</p>";        // Verificar tabelas    $stmt = $pdo->query("SHOW TABLES");    $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);    echo "<p>Tabelas encontradas: " . implode(', ', $tables) . "</p>";    } catch (PDOException $e) {    echo "<p style='color: red;'>‚ùå Banco 'helpdesk_titanium' n√£o existe: " . $e->getMessage() . "</p>";}// 4. Verificar usu√°riosecho "<h2>4. Usu√°rios no Banco:</h2>";try {    $pdo = new PDO('mysql:host=localhost;dbname=helpdesk_titanium', 'root', '');    $stmt = $pdo->query("SELECT id, username, email, name, type FROM users");    $users = $stmt->fetchAll(PDO::FETCH_ASSOC);        if (count($users) > 0) {        echo "<p style='color: green;'>‚úÖ " . count($users) . " usu√°rios encontrados</p>";        echo "<table border='1' style='border-collapse: collapse;'>";        echo "<tr><th>ID</th><th>Username</th><th>Email</th><th>Name</th><th>Type</th></tr>";        foreach ($users as $user) {            echo "<tr>";            echo "<td>" . $user['id'] . "</td>";            echo "<td>" . $user['username'] . "</td>";            echo "<td>" . $user['email'] . "</td>";            echo "<td>" . $user['name'] . "</td>";            echo "<td>" . $user['type'] . "</td>";            echo "</tr>";        }        echo "</table>";    } else {        echo "<p style='color: red;'>‚ùå Nenhum usu√°rio encontrado</p>";    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro ao buscar usu√°rios: " . $e->getMessage() . "</p>";}// 5. Verificar ticketsecho "<h2>5. Tickets no Banco:</h2>";try {    $pdo = new PDO('mysql:host=localhost;dbname=helpdesk_titanium', 'root', '');    $stmt = $pdo->query("SELECT COUNT(*) as total FROM tickets");    $count = $stmt->fetch()['total'];        if ($count > 0) {        echo "<p style='color: green;'>‚úÖ " . $count . " tickets encontrados</p>";                $stmt = $pdo->query("SELECT id, title, status, priority, created_at FROM tickets ORDER BY created_at DESC LIMIT 5");        $tickets = $stmt->fetchAll(PDO::FETCH_ASSOC);                echo "<table border='1' style='border-collapse: collapse;'>";        echo "<tr><th>ID</th><th>T√≠tulo</th><th>Status</th><th>Prioridade</th><th>Data</th></tr>";        foreach ($tickets as $ticket) {            echo "<tr>";            echo "<td>" . $ticket['id'] . "</td>";            echo "<td>" . htmlspecialchars($ticket['title']) . "</td>";            echo "<td>" . $ticket['status'] . "</td>";            echo "<td>" . $ticket['priority'] . "</td>";            echo "<td>" . $ticket['created_at'] . "</td>";            echo "</tr>";        }        echo "</table>";    } else {        echo "<p style='color: orange;'>‚ö†Ô∏è Nenhum ticket encontrado</p>";    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro ao buscar tickets: " . $e->getMessage() . "</p>";}// 6. Testar API de loginecho "<h2>6. Teste da API de Login:</h2>";$loginData = json_encode([    'username' => 'admin',    'password' => 'Controll IT@10']);$context = stream_context_create([    'http' => [        'method' => 'POST',        'header' => 'Content-Type: application/json',        'content' => $loginData    ]]);try {    $response = file_get_contents('http://localhost/sistema-web-Controll IT/api/auth.php?action=login', false, $context);        if ($response === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de login</p>";    } else {        $data = json_decode($response, true);        echo "<p>Resposta da API:</p>";        echo "<pre>" . htmlspecialchars($response) . "</pre>";                if ($data && isset($data['success']) && $data['success']) {            echo "<p style='color: green;'>‚úÖ API de login funcionando</p>";        } else {            echo "<p style='color: red;'>‚ùå API de login falhou</p>";        }    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro no teste de login: " . $e->getMessage() . "</p>";}// 7. Testar API de ticketsecho "<h2>7. Teste da API de Tickets:</h2>";try {    $response = file_get_contents('http://localhost/sistema-web-Controll IT/api/tickets.php?action=list');        if ($response === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de tickets</p>";    } else {        $data = json_decode($response, true);        echo "<p>Resposta da API:</p>";        echo "<pre>" . htmlspecialchars($response) . "</pre>";                if ($data && isset($data['success']) && $data['success']) {            echo "<p style='color: green;'>‚úÖ API de tickets funcionando</p>";            echo "<p>Total de tickets: " . count($data['data']) . "</p>";        } else {            echo "<p style='color: red;'>‚ùå API de tickets falhou</p>";        }    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro no teste de tickets: " . $e->getMessage() . "</p>";}// 8. Verificar arquivos do sistemaecho "<h2>8. Arquivos do Sistema:</h2>";$files = [    'index.html',    'script.js',    'styles.css',    'api/config.php',    'api/auth.php',    'api/tickets.php'];foreach ($files as $file) {    if (file_exists($file)) {        echo "<p style='color: green;'>‚úÖ $file existe</p>";    } else {        echo "<p style='color: red;'>‚ùå $file n√£o encontrado</p>";    }}echo "<hr>";echo "<h2>üìã Resumo:</h2>";echo "<p>Execute este debug e me informe quais se√ß√µes est√£o com ‚ùå para que eu possa corrigir os problemas espec√≠ficos.</p>";?>