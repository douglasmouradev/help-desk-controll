<?php// Debug completo do login e ticketsecho "<h1>üîç Debug Completo - Login e Tickets</h1>";// 1. Testar conex√£o com bancoecho "<h2>1. Teste de Conex√£o com Banco:</h2>";try {    require_once 'api/config.php';    $db = new Database();    $conn = $db->getConnection();    echo "<p style='color: green;'>‚úÖ Conex√£o com banco OK</p>";} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro de conex√£o: " . $e->getMessage() . "</p>";    exit;}// 2. Verificar usu√°rios no bancoecho "<h2>2. Usu√°rios no Banco:</h2>";try {    $stmt = $conn->prepare("SELECT id, username, email, name, type FROM users");    $stmt->execute();    $users = $stmt->fetchAll(PDO::FETCH_ASSOC);        echo "<table border='1' style='border-collapse: collapse;'>";    echo "<tr><th>ID</th><th>Username</th><th>Email</th><th>Name</th><th>Type</th></tr>";    foreach ($users as $user) {        echo "<tr>";        echo "<td>" . $user['id'] . "</td>";        echo "<td>" . $user['username'] . "</td>";        echo "<td>" . $user['email'] . "</td>";        echo "<td>" . $user['name'] . "</td>";        echo "<td>" . $user['type'] . "</td>";        echo "</tr>";    }    echo "</table>";} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro ao buscar usu√°rios: " . $e->getMessage() . "</p>";}// 3. Testar login via APIecho "<h2>3. Teste de Login via API:</h2>";$loginData = [    'username' => 'admin',    'password' => 'Controll IT@10'];$url = 'http://localhost/sistema-web-Controll IT/api/auth.php?action=login';$context = stream_context_create([    'http' => [        'method' => 'POST',        'header' => 'Content-Type: application/json',        'content' => json_encode($loginData)    ]]);try {    $response = file_get_contents($url, false, $context);    if ($response === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de login</p>";    } else {        $data = json_decode($response, true);        echo "<p>Resposta da API de login:</p>";        echo "<pre>" . htmlspecialchars($response) . "</pre>";                if ($data && isset($data['success']) && $data['success']) {            echo "<p style='color: green;'>‚úÖ Login funcionando!</p>";        } else {            echo "<p style='color: red;'>‚ùå Login falhou</p>";        }    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro no teste de login: " . $e->getMessage() . "</p>";}// 4. Testar API de ticketsecho "<h2>4. Teste de API de Tickets:</h2>";$ticketsUrl = 'http://localhost/sistema-web-Controll IT/api/tickets.php?action=list';$ticketsContext = stream_context_create([    'http' => [        'method' => 'GET',        'header' => 'Content-Type: application/json'    ]]);try {    $ticketsResponse = file_get_contents($ticketsUrl, false, $ticketsContext);    if ($ticketsResponse === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de tickets</p>";    } else {        $ticketsData = json_decode($ticketsResponse, true);        echo "<p>Resposta da API de tickets:</p>";        echo "<pre>" . htmlspecialchars($ticketsResponse) . "</pre>";                if ($ticketsData && isset($ticketsData['success']) && $ticketsData['success']) {            echo "<p style='color: green;'>‚úÖ API de tickets funcionando!</p>";            echo "<p>Total de tickets: " . count($ticketsData['data']) . "</p>";        } else {            echo "<p style='color: red;'>‚ùå API de tickets falhou</p>";        }    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro no teste de tickets: " . $e->getMessage() . "</p>";}// 5. Verificar se h√° tickets no bancoecho "<h2>5. Tickets no Banco:</h2>";try {    $stmt = $conn->prepare("        SELECT             t.id, t.title, t.description, t.priority, t.created_at,            ts.name as status,            tc.name as category,            u.name as user_name        FROM tickets t        LEFT JOIN ticket_statuses ts ON t.status_id = ts.id        LEFT JOIN ticket_categories tc ON t.category_id = tc.id        LEFT JOIN users u ON t.user_id = u.id        ORDER BY t.created_at DESC    ");    $stmt->execute();    $tickets = $stmt->fetchAll(PDO::FETCH_ASSOC);        if (count($tickets) > 0) {        echo "<p style='color: green;'>‚úÖ Encontrados " . count($tickets) . " tickets no banco</p>";        echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";        echo "<tr><th>ID</th><th>T√≠tulo</th><th>Status</th><th>Prioridade</th><th>Usu√°rio</th><th>Data</th></tr>";        foreach ($tickets as $ticket) {            echo "<tr>";            echo "<td>" . $ticket['id'] . "</td>";            echo "<td>" . htmlspecialchars($ticket['title']) . "</td>";            echo "<td>" . htmlspecialchars($ticket['status']) . "</td>";            echo "<td>" . htmlspecialchars($ticket['priority']) . "</td>";            echo "<td>" . htmlspecialchars($ticket['user_name']) . "</td>";            echo "<td>" . $ticket['created_at'] . "</td>";            echo "</tr>";        }        echo "</table>";    } else {        echo "<p style='color: orange;'>‚ö†Ô∏è Nenhum ticket encontrado no banco</p>";    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro ao buscar tickets: " . $e->getMessage() . "</p>";}echo "<hr>";echo "<h2>üìã Pr√≥ximos Passos:</h2>";echo "<ol>";echo "<li>Verifique se todas as se√ß√µes acima est√£o com ‚úÖ</li>";echo "<li>Se houver ‚ùå, corrija os problemas indicados</li>";echo "<li>Teste o login na interface principal</li>";echo "<li>Verifique o console do navegador (F12) para erros JavaScript</li>";echo "</ol>";?>