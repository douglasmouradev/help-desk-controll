<?php// Teste espec√≠fico para verificar os detalhes do ticketecho "<h1>üß™ Teste de Detalhes do Ticket</h1>";// 1. Primeiro fazer login para obter tokenecho "<h2>1. Login para obter token:</h2>";$loginData = json_encode([    'username' => 'admin',    'password' => 'Controll IT@10']);$loginContext = stream_context_create([    'http' => [        'method' => 'POST',        'header' => 'Content-Type: application/json',        'content' => $loginData    ]]);try {    $loginResponse = file_get_contents('http://localhost/sistema-web-Controll IT/api/auth.php?action=login', false, $loginContext);        if ($loginResponse === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de login</p>";        exit;    }        $loginData = json_decode($loginResponse, true);    if (!$loginData['success']) {        echo "<p style='color: red;'>‚ùå Login falhou</p>";        exit;    }        $token = $loginData['data']['token'];    echo "<p style='color: green;'>‚úÖ Login bem-sucedido!</p>";    echo "<p>Token: " . substr($token, 0, 50) . "...</p>";    } catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro no login: " . $e->getMessage() . "</p>";    exit;}// 2. Listar tickets para obter um IDecho "<h2>2. Listando tickets:</h2>";$ticketsContext = stream_context_create([    'http' => [        'method' => 'GET',        'header' => 'Authorization: Bearer ' . $token . "\r\n" .                   'Content-Type: application/json'    ]]);try {    $ticketsResponse = file_get_contents('http://localhost/sistema-web-Controll IT/api/tickets.php', false, $ticketsContext);        if ($ticketsResponse === false) {        echo "<p style='color: red;'>‚ùå Erro ao conectar com API de tickets</p>";    } else {        $ticketsData = json_decode($ticketsResponse, true);        echo "<p>Resposta da API de tickets:</p>";        echo "<pre>" . htmlspecialchars($ticketsResponse) . "</pre>";                if ($ticketsData && isset($ticketsData['success']) && $ticketsData['success']) {            echo "<p style='color: green;'>‚úÖ API de tickets funcionando!</p>";            echo "<p>Total de tickets: " . count($ticketsData['data']) . "</p>";                        if (count($ticketsData['data']) > 0) {                $firstTicket = $ticketsData['data'][0];                $ticketId = $firstTicket['id'];                echo "<p>Primeiro ticket ID: " . $ticketId . "</p>";                                // 3. Testar visualiza√ß√£o do ticket                echo "<h2>3. Testando visualiza√ß√£o do ticket #$ticketId:</h2>";                                $ticketContext = stream_context_create([                    'http' => [                        'method' => 'GET',                        'header' => 'Authorization: Bearer ' . $token . "\r\n" .                                   'Content-Type: application/json'                    ]                ]);                                $ticketResponse = file_get_contents("http://localhost/sistema-web-Controll IT/api/tickets.php/$ticketId", false, $ticketContext);                                if ($ticketResponse === false) {                    echo "<p style='color: red;'>‚ùå Erro ao conectar com API de visualiza√ß√£o</p>";                } else {                    $ticketData = json_decode($ticketResponse, true);                    echo "<p>Resposta da API de visualiza√ß√£o:</p>";                    echo "<pre>" . htmlspecialchars($ticketResponse) . "</pre>";                                        if ($ticketData && isset($ticketData['success']) && $ticketData['success']) {                        echo "<p style='color: green;'>‚úÖ Visualiza√ß√£o funcionando!</p>";                        echo "<h3>Detalhes do ticket:</h3>";                        echo "<ul>";                        echo "<li><strong>ID:</strong> " . ($ticketData['data']['id'] ?? 'N/A') . "</li>";                        echo "<li><strong>T√≠tulo:</strong> " . ($ticketData['data']['title'] ?? 'N/A') . "</li>";                        echo "<li><strong>Descri√ß√£o:</strong> " . ($ticketData['data']['description'] ?? 'N/A') . "</li>";                        echo "<li><strong>Status:</strong> " . ($ticketData['data']['status'] ?? 'N/A') . "</li>";                        echo "<li><strong>Prioridade:</strong> " . ($ticketData['data']['priority'] ?? 'N/A') . "</li>";                        echo "<li><strong>Categoria:</strong> " . ($ticketData['data']['category'] ?? 'N/A') . "</li>";                        echo "<li><strong>Usu√°rio:</strong> " . ($ticketData['data']['user_name'] ?? 'N/A') . "</li>";                        echo "<li><strong>Criado em:</strong> " . ($ticketData['data']['created_at'] ?? 'N/A') . "</li>";                        echo "<li><strong>Atualizado em:</strong> " . ($ticketData['data']['updated_at'] ?? 'N/A') . "</li>";                        echo "</ul>";                    } else {                        echo "<p style='color: red;'>‚ùå Visualiza√ß√£o falhou</p>";                    }                }            } else {                echo "<p style='color: orange;'>‚ö†Ô∏è Nenhum ticket encontrado</p>";            }        } else {            echo "<p style='color: red;'>‚ùå API de tickets falhou</p>";        }    }} catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro na API de tickets: " . $e->getMessage() . "</p>";}echo "<hr>";echo "<h2>üìã Resultado:</h2>";echo "<p>Se todos os testes estiverem com ‚úÖ, o modal deve mostrar as informa√ß√µes corretas!</p>";echo "<p>Se houver ‚ùå, me informe qual √© o problema espec√≠fico.</p>";?>