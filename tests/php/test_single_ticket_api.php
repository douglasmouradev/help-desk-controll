<?php// Teste da API para um √∫nico ticketecho "<h1>üß™ Teste da API de Ticket √önico</h1>";// Incluir apenas o essencialrequire_once 'api/config.php';require_once 'api/tickets.php';// Simular uma requisi√ß√£o GET para um ticket espec√≠fico$_SERVER['REQUEST_METHOD'] = 'GET';$_GET['path'] = '1'; // ID do ticket a ser testadoecho "<h2>1. Testando m√©todo show() para o Ticket ID 1:</h2>";try {    $controller = new TicketsController();        // Capturar output    ob_start();    $controller->show(1); // Chamar o m√©todo show com o ID do ticket    $output = ob_get_clean();        echo "<p style='color: green;'>‚úÖ M√©todo show() executado</p>";    echo "<h3>Resposta:</h3>";    echo "<pre>" . htmlspecialchars($output) . "</pre>";        $data = json_decode($output, true);    if ($data && isset($data['success'])) {        if ($data['success']) {            echo "<p style='color: green;'>‚úÖ API retornou sucesso!</p>";            echo "<p>Dados do ticket:</p>";            echo "<pre>" . htmlspecialchars(json_encode($data['data'], JSON_PRETTY_PRINT)) . "</pre>";        } else {            echo "<p style='color: red;'>‚ùå API retornou erro: " . ($data['message'] ?? 'Erro desconhecido') . "</p>";        }    } else {        echo "<p style='color: red;'>‚ùå Resposta JSON inv√°lida ou incompleta</p>";    }    } catch (Exception $e) {    echo "<p style='color: red;'>‚ùå Erro: " . $e->getMessage() . "</p>";    echo "<p>Arquivo: " . $e->getFile() . "</p>";    echo "<p>Linha: " . $e->getLine() . "</p>";}echo "<hr>";echo "<h2>üìã Pr√≥ximos Passos:</h2>";echo "<ol>";echo "<li>Verifique se o ticket ID 1 existe no seu banco de dados.</li>";echo "<li>Analise a resposta da API para ver se todos os campos (descri√ß√£o, datas, status, prioridade, etc.) est√£o presentes e corretos.</li>";echo "</ol>";?>