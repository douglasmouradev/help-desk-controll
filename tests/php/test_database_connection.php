<?php// Teste de conexão com o banco de dadosheader('Content-Type: application/json; charset=utf-8');header('Access-Control-Allow-Origin: *');header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');header('Access-Control-Allow-Headers: Content-Type, Authorization');// Tratar requisições OPTIONS (preflight)if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {    http_response_code(200);    exit();}try {    // Incluir configuração    require_once 'api/config.php';        // Testar conexão    $db = new Database();    $conn = $db->getConnection();        // Testar query simples    $stmt = $conn->query("SELECT 1 as test");    $result = $stmt->fetch();        // Verificar se a tabela users existe    $stmt = $conn->query("SHOW TABLES LIKE 'users'");    $usersTable = $stmt->fetch();        // Verificar se a tabela tickets existe    $stmt = $conn->query("SHOW TABLES LIKE 'tickets'");    $ticketsTable = $stmt->fetch();        // Contar usuários    $userCount = 0;    if ($usersTable) {        $stmt = $conn->query("SELECT COUNT(*) as count FROM users");        $userCount = $stmt->fetch()['count'];    }        // Contar tickets    $ticketCount = 0;    if ($ticketsTable) {        $stmt = $conn->query("SELECT COUNT(*) as count FROM tickets");        $ticketCount = $stmt->fetch()['count'];    }        echo json_encode([        'success' => true,        'message' => 'Conexão com banco de dados funcionando',        'database_info' => [            'connection' => 'OK',            'users_table' => $usersTable ? 'EXISTS' : 'NOT_FOUND',            'tickets_table' => $ticketsTable ? 'EXISTS' : 'NOT_FOUND',            'user_count' => $userCount,            'ticket_count' => $ticketCount        ],        'timestamp' => date('Y-m-d H:i:s')    ]);    } catch (Exception $e) {    http_response_code(500);    echo json_encode([        'success' => false,        'message' => 'Erro na conexão com banco de dados',        'error' => $e->getMessage(),        'timestamp' => date('Y-m-d H:i:s')    ]);}?>