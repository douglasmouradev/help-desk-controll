<?php// Script para configurar o banco de dados localecho "🔧 Configurando banco de dados local...\n";try {    // Tentar conectar sem especificar o banco primeiro    $dsn = "mysql:host=localhost;port=3306;charset=utf8mb4";    $pdo = new PDO($dsn, 'root', 'root', [        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC    ]);        echo "✅ Conexão com MySQL estabelecida\n";        // Criar banco de dados se não existir    $pdo->exec("CREATE DATABASE IF NOT EXISTS helpdesk_titanium CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");    echo "✅ Banco de dados 'helpdesk_titanium' criado/verificado\n";        // Usar o banco    $pdo->exec("USE helpdesk_titanium");        // Ler e executar o schema    $schema = file_get_contents('database_schema.sql');    if ($schema) {        // Dividir em comandos individuais        $commands = explode(';', $schema);        foreach ($commands as $command) {            $command = trim($command);            if (!empty($command)) {                try {                    $pdo->exec($command);                } catch (PDOException $e) {                    // Ignorar erros de tabela já existe                    if (strpos($e->getMessage(), 'already exists') === false) {                        echo "⚠️  Aviso: " . $e->getMessage() . "\n";                    }                }            }        }        echo "✅ Schema do banco executado\n";    }        // Verificar se as tabelas foram criadas    $stmt = $pdo->query("SHOW TABLES");    $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);        echo "\n📋 Tabelas encontradas:\n";    foreach ($tables as $table) {        echo "- $table\n";    }        // Verificar se existe usuário admin    $stmt = $pdo->prepare("SELECT COUNT(*) as count FROM users WHERE user_type = 'admin'");    $stmt->execute();    $adminCount = $stmt->fetch()['count'];        if ($adminCount == 0) {        echo "\n👤 Criando usuário administrador...\n";                $password = 'admin123';        $passwordHash = password_hash($password, PASSWORD_DEFAULT);                $stmt = $pdo->prepare("            INSERT INTO users (name, email, username, password_hash, user_type, active, created_at)             VALUES (?, ?, ?, ?, ?, ?, NOW())        ");                $stmt->execute([            'Administrador',            'admin@controllit.com.br',            'admin',            $passwordHash,            'admin',            1        ]);                echo "✅ Usuário admin criado:\n";        echo "   Email: admin@controllit.com.br\n";        echo "   Username: admin\n";        echo "   Senha: admin123\n";    } else {        echo "\n✅ Usuário administrador já existe\n";    }        // Criar usuário de teste    $stmt = $pdo->prepare("SELECT COUNT(*) as count FROM users WHERE username = 'douglas'");    $stmt->execute();    $userCount = $stmt->fetch()['count'];        if ($userCount == 0) {        echo "\n👤 Criando usuário de teste...\n";                $password = 'senha123';        $passwordHash = password_hash($password, PASSWORD_DEFAULT);                $stmt = $pdo->prepare("            INSERT INTO users (name, email, username, password_hash, user_type, active, created_at)             VALUES (?, ?, ?, ?, ?, ?, NOW())        ");                $stmt->execute([            'Douglas',            'douglas@controllit.com.br',            'douglas',            $passwordHash,            'user',            1        ]);                echo "✅ Usuário de teste criado:\n";        echo "   Email: douglas@controllit.com.br\n";        echo "   Username: douglas\n";        echo "   Senha: senha123\n";    } else {        echo "\n✅ Usuário de teste já existe\n";    }        echo "\n🎉 Configuração do banco concluída com sucesso!\n";    echo "\n📝 Próximos passos:\n";    echo "1. Acesse http://localhost no navegador\n";    echo "2. Use as credenciais criadas para fazer login\n";    echo "3. O sistema está pronto para uso!\n";    } catch (PDOException $e) {    echo "❌ Erro na configuração do banco: " . $e->getMessage() . "\n";    echo "\n🔧 Soluções possíveis:\n";    echo "1. Verifique se o XAMPP está rodando\n";    echo "2. Verifique se o MySQL está ativo no XAMPP Control Panel\n";    echo "3. Tente reiniciar o XAMPP\n";}?>