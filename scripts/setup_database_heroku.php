<?php// Script para configurar o banco de dados no Herokurequire_once 'api/config.php';try {    $db = new Database();    $conn = $db->getConnection();        echo "Conexão com o banco estabelecida com sucesso!\n";        // Criar tabelas se não existirem    $sql = "    CREATE TABLE IF NOT EXISTS users (        id SERIAL PRIMARY KEY,        username VARCHAR(50) UNIQUE NOT NULL,        email VARCHAR(100) UNIQUE NOT NULL,        password_hash VARCHAR(255) NOT NULL,        full_name VARCHAR(100) NOT NULL,        user_type ENUM('user', 'support', 'admin') DEFAULT 'user',        is_active BOOLEAN DEFAULT true,        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP    );        CREATE TABLE IF NOT EXISTS tickets (        id SERIAL PRIMARY KEY,        title VARCHAR(200) NOT NULL,        description TEXT NOT NULL,        status ENUM('aberto', 'em_andamento', 'fechado') DEFAULT 'aberto',        priority ENUM('baixa', 'media', 'alta', 'critica') DEFAULT 'media',        category VARCHAR(50) DEFAULT 'outros',        user_id INTEGER REFERENCES users(id),        assigned_to INTEGER REFERENCES users(id),        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP    );        CREATE TABLE IF NOT EXISTS ticket_comments (        id SERIAL PRIMARY KEY,        ticket_id INTEGER REFERENCES tickets(id) ON DELETE CASCADE,        user_id INTEGER REFERENCES users(id),        comment TEXT NOT NULL,        is_internal BOOLEAN DEFAULT false,        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP    );        CREATE TABLE IF NOT EXISTS access_logs (        id SERIAL PRIMARY KEY,        user_id INTEGER REFERENCES users(id),        ip_address VARCHAR(45),        user_agent TEXT,        action VARCHAR(100),        resource VARCHAR(100),        success BOOLEAN DEFAULT true,        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP    );    ";        $conn->exec($sql);    echo "Tabelas criadas com sucesso!\n";        // Inserir usuários padrão    $users = [        [            'username' => 'admin',            'email' => 'admin@controllit.com.br',            'password' => 'admin123',            'full_name' => 'Administrador',            'user_type' => 'admin'        ],        [            'username' => 'suporte',            'email' => 'suporte@controllit.com.br',            'password' => 'suporte123',            'full_name' => 'Agente de Suporte',            'user_type' => 'support'        ],        [            'username' => 'usuario',            'email' => 'usuario@controllit.com.br',            'password' => 'usuario123',            'full_name' => 'Usuário Padrão',            'user_type' => 'user'        ]    ];        foreach ($users as $user) {        $stmt = $conn->prepare("            INSERT INTO users (username, email, password_hash, full_name, user_type)             VALUES (?, ?, ?, ?, ?)            ON CONFLICT (username) DO NOTHING        ");                $stmt->execute([            $user['username'],            $user['email'],            password_hash($user['password'], PASSWORD_DEFAULT),            $user['full_name'],            $user['user_type']        ]);    }        echo "Usuários padrão criados com sucesso!\n";    echo "Sistema configurado e pronto para uso!\n";    } catch (Exception $e) {    echo "Erro: " . $e->getMessage() . "\n";}?>